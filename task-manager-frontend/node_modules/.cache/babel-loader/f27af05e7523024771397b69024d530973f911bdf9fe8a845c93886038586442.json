{"ast":null,"code":"import React,{useState,useEffect}from'react';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import axios from'axios';import{TextField,Button,Typography,Box,Paper,List,ListItem,IconButton}from'@mui/material';import DeleteIcon from'@mui/icons-material/Delete';import EditIcon from'@mui/icons-material/Edit';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const statusConfig={todo:{label:'To Do',color:'#FFCDD2'},'in-progress':{label:'In Progress',color:'#BBDEFB'},done:{label:'Done',color:'#C8E6C9'}};const TaskBoard=_ref=>{let{user}=_ref;const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState({title:'',description:'',status:'todo'});const[editingId,setEditingId]=useState(null);useEffect(()=>{fetchTasks();},[]);const fetchTasks=async()=>{try{const res=await axios.get('/api/tasks',{headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});setTasks(res.data);}catch(err){console.error(err);}};const handleAddTask=async()=>{try{await axios.post('/api/tasks',newTask,{headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});setNewTask({title:'',description:'',status:'todo'});fetchTasks();}catch(err){console.error(err);}};const handleUpdateTask=async task=>{try{await axios.patch(`/api/tasks/${task._id}`,task,{headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});setEditingId(null);fetchTasks();}catch(err){console.error(err);}};const handleDeleteTask=async id=>{try{await axios.delete(`/api/tasks/${id}`,{headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});fetchTasks();}catch(err){console.error(err);}};const onDragEnd=async result=>{if(!result.destination)return;const updatedTasks=Array.from(tasks);const[movedTask]=updatedTasks.splice(result.source.index,1);updatedTasks.splice(result.destination.index,0,movedTask);setTasks(updatedTasks);try{await axios.patch(`/api/tasks/${movedTask._id}`,{status:movedTask.status,position:result.destination.index},{headers:{Authorization:`Bearer ${localStorage.getItem('token')}`}});}catch(err){console.error(err);fetchTasks();}};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",gutterBottom:true,children:[\"Welcome, \",user.username]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mb:3,backgroundColor:'#E6F7FF'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Add New Task\"}),/*#__PURE__*/_jsx(TextField,{label:\"Title\",fullWidth:true,margin:\"normal\",value:newTask.title,onChange:e=>setNewTask({...newTask,title:e.target.value})}),/*#__PURE__*/_jsx(TextField,{label:\"Description\",fullWidth:true,margin:\"normal\",multiline:true,rows:2,value:newTask.description,onChange:e=>setNewTask({...newTask,description:e.target.value})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleAddTask,sx:{mt:2},children:\"Add Task\"})]}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:2},children:Object.entries(statusConfig).map(_ref2=>{let[status,config]=_ref2;return/*#__PURE__*/_jsx(Droppable,{droppableId:status,children:provided=>/*#__PURE__*/_jsxs(Paper,{ref:provided.innerRef,...provided.droppableProps,sx:{p:2,flex:1,backgroundColor:'#E6F7FF'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:config.label}),/*#__PURE__*/_jsxs(List,{children:[tasks.filter(task=>task.status===status).map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:task._id,index:index,children:provided=>/*#__PURE__*/_jsx(ListItem,{ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,sx:{mb:1,p:2,backgroundColor:'#FFFFFF',borderRadius:1,boxShadow:1},children:editingId===task._id?/*#__PURE__*/_jsxs(Box,{sx:{width:'100%'},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,value:task.title,onChange:e=>setTasks(tasks.map(t=>t._id===task._id?{...t,title:e.target.value}:t)),sx:{mb:1}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,multiline:true,value:task.description,onChange:e=>setTasks(tasks.map(t=>t._id===task._id?{...t,description:e.target.value}:t)),sx:{mb:1}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>handleUpdateTask(task),sx:{mr:1},children:\"Save\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>setEditingId(null),children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:task.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:task.description})]}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>setEditingId(task._id),children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleDeleteTask(task._id),children:/*#__PURE__*/_jsx(DeleteIcon,{color:\"error\"})})]})})},task._id)),provided.placeholder]})]})},status);})})})]});};export default TaskBoard;","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","axios","TextField","Button","Typography","Box","Paper","List","ListItem","IconButton","DeleteIcon","EditIcon","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","statusConfig","todo","label","color","done","TaskBoard","_ref","user","tasks","setTasks","newTask","setNewTask","title","description","status","editingId","setEditingId","fetchTasks","res","get","headers","Authorization","localStorage","getItem","data","err","console","error","handleAddTask","post","handleUpdateTask","task","patch","_id","handleDeleteTask","id","delete","onDragEnd","result","destination","updatedTasks","Array","from","movedTask","splice","source","index","position","children","variant","gutterBottom","username","sx","p","mb","backgroundColor","fullWidth","margin","value","onChange","e","target","multiline","rows","onClick","mt","display","gap","Object","entries","map","_ref2","config","droppableId","provided","ref","innerRef","droppableProps","flex","filter","draggableId","draggableProps","dragHandleProps","borderRadius","boxShadow","width","t","mr","flexGrow","placeholder"],"sources":["C:/Users/BOOK 2/OneDrive/Desktop/projects/task-manager/task-manager-frontend/src/components/TaskBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Typography, Box, Paper, List, ListItem, IconButton } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst statusConfig = {\r\n  todo: { label: 'To Do', color: '#FFCDD2' },\r\n  'in-progress': { label: 'In Progress', color: '#BBDEFB' },\r\n  done: { label: 'Done', color: '#C8E6C9' }\r\n};\r\n\r\nconst TaskBoard = ({ user }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState({ title: '', description: '', status: 'todo' });\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const res = await axios.get('/api/tasks', {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleAddTask = async () => {\r\n    try {\r\n      await axios.post('/api/tasks', newTask, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setNewTask({ title: '', description: '', status: 'todo' });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async (task) => {\r\n    try {\r\n      await axios.patch(`/api/tasks/${task._id}`, task, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setEditingId(null);\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/tasks/${id}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const updatedTasks = Array.from(tasks);\r\n    const [movedTask] = updatedTasks.splice(result.source.index, 1);\r\n    updatedTasks.splice(result.destination.index, 0, movedTask);\r\n\r\n    setTasks(updatedTasks);\r\n\r\n    try {\r\n      await axios.patch(`/api/tasks/${movedTask._id}`, {\r\n        status: movedTask.status,\r\n        position: result.destination.index\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      fetchTasks();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>Welcome, {user.username}</Typography>\r\n      \r\n      {/* Add Task Form */}\r\n      <Paper sx={{ p: 3, mb: 3, backgroundColor: '#E6F7FF' }}>\r\n        <Typography variant=\"h6\" gutterBottom>Add New Task</Typography>\r\n        <TextField\r\n          label=\"Title\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({...newTask, title: e.target.value})}\r\n        />\r\n        <TextField\r\n          label=\"Description\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline\r\n          rows={2}\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({...newTask, description: e.target.value})}\r\n        />\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={handleAddTask}\r\n          sx={{ mt: 2 }}\r\n        >\r\n          Add Task\r\n        </Button>\r\n      </Paper>\r\n\r\n      {/* Task Board */}\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          {Object.entries(statusConfig).map(([status, config]) => (\r\n            <Droppable droppableId={status} key={status}>\r\n              {(provided) => (\r\n                <Paper\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  sx={{ \r\n                    p: 2, \r\n                    flex: 1,\r\n                    backgroundColor: '#E6F7FF'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h6\">{config.label}</Typography>\r\n                  <List>\r\n                    {tasks\r\n                      .filter(task => task.status === status)\r\n                      .map((task, index) => (\r\n                        <Draggable key={task._id} draggableId={task._id} index={index}>\r\n                          {(provided) => (\r\n                            <ListItem\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              sx={{\r\n                                mb: 1,\r\n                                p: 2,\r\n                                backgroundColor: '#FFFFFF',\r\n                                borderRadius: 1,\r\n                                boxShadow: 1\r\n                              }}\r\n                            >\r\n                              {editingId === task._id ? (\r\n                                <Box sx={{ width: '100%' }}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    value={task.title}\r\n                                    onChange={(e) => setTasks(tasks.map(t => \r\n                                      t._id === task._id ? {...t, title: e.target.value} : t\r\n                                    ))}\r\n                                    sx={{ mb: 1 }}\r\n                                  />\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    multiline\r\n                                    value={task.description}\r\n                                    onChange={(e) => setTasks(tasks.map(t => \r\n                                      t._id === task._id ? {...t, description: e.target.value} : t\r\n                                    ))}\r\n                                    sx={{ mb: 1 }}\r\n                                  />\r\n                                  <Button \r\n                                    variant=\"contained\" \r\n                                    onClick={() => handleUpdateTask(task)}\r\n                                    sx={{ mr: 1 }}\r\n                                  >\r\n                                    Save\r\n                                  </Button>\r\n                                  <Button \r\n                                    variant=\"outlined\" \r\n                                    onClick={() => setEditingId(null)}\r\n                                  >\r\n                                    Cancel\r\n                                  </Button>\r\n                                </Box>\r\n                              ) : (\r\n                                <>\r\n                                  <Box sx={{ flexGrow: 1 }}>\r\n                                    <Typography variant=\"subtitle1\">{task.title}</Typography>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                      {task.description}\r\n                                    </Typography>\r\n                                  </Box>\r\n                                  <IconButton onClick={() => setEditingId(task._id)}>\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n                                  <IconButton onClick={() => handleDeleteTask(task._id)}>\r\n                                    <DeleteIcon color=\"error\" />\r\n                                  </IconButton>\r\n                                </>\r\n                              )}\r\n                            </ListItem>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                    {provided.placeholder}\r\n                  </List>\r\n                </Paper>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </Box>\r\n      </DragDropContext>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}